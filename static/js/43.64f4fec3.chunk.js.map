{"version":3,"file":"static/js/43.64f4fec3.chunk.js","mappings":"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","sources":["Pages/Project/ExpandableSection.jsx","Pages/Project/Project.jsx"],"sourcesContent":["// disable eslint for this file\n/* eslint-disable */\n\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Typography } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport './Project.css';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n    color: theme.palette.text.secondary,\n    backgroundImage: 'none',\n    backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n    boxShadow: expanded ? theme.shadows : 'none',\n    transition: theme.transitions,\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n    marginTop: expanded ? theme.spacing(3) : 0,\n    flexDirection: 'row-reverse',\n    paddingLeft: expanded ? theme.spacing(1) : 0,\n    '& .MuiTypography-root': {\n        color: theme.palette.text.primary,\n        textDecoration: 'underline',\n        transition: theme.transitions,\n        '&:hover': {\n            color: theme.palette.primary.main,\n        },\n    },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n    const [expanded, setExpanded] = useState(undefined);\n\n    const handleAccordionChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : undefined);\n    };\n\n    return (\n        <div>\n            <StyledAccordion expanded={expanded === \"panel1\"} onChange={handleAccordionChange(\"panel1\")}>\n                <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n                    <Typography component=\"a\" variant=\"body1\">\n                        {title}\n                    </Typography>\n                </StyledAccordionSummary>\n                <MuiAccordionDetails>\n                    {content}\n                </MuiAccordionDetails>\n            </StyledAccordion>\n        </div>\n    );\n}\n\nexport default ExpandableSection;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport { Box, Typography, Container, Divider, Button, Chip, Grid } from '@mui/material';\n\nimport { styled } from '@mui/material/styles';\n\nimport ExpandableSection from './ExpandableSection';\n\nimport ThemePreferences from '../../ThemePreferences';\n\nimport data from '../../temp_database.json';\nimport './Project.css';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport LinkIcon from '@mui/icons-material/Link';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\n\n// Download button: download raw dataset\nconst DatasetDownloadButton = ({ project }) => {\n  const isDisabled = project.sheetId == null ? true : false;\n  return (\n    <Box>\n      <a\n        href={\n          isDisabled\n            ? ''\n            : `https://docs.google.com/spreadsheets/d/${project.sheetId}`\n        }\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Button disabled={isDisabled} variant=\"contained\">\n          <LinkIcon />\n          &nbsp;\n          {isDisabled ? 'COMING SOON' : 'FULL DATASET'}\n        </Button>\n      </a>\n    </Box>\n  );\n};\n\n// Custom Chip component to display metadata\nconst CustomChip = ({icon, label}) =>{\n  return(\n    <Chip\n    size=\"small\"\n    icon={icon}\n    label={label}\n    />\n  );\n}\n\nconst Project = ({ themePreference }) => {\n  const [_, setUnderlineLink] = useContext(LinkContext);\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    data.map((p) => {\n      if (p.id === id) {\n        setProject({ ...p });\n        let temp = {};\n        for (let i = 0; i < p.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n      }\n    });\n\n    setUnderlineLink('project');\n  }, [id, setUnderlineLink]);\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          <Box>\n            <Container sx={{ pt: 4, pb: 4 }}>\n\n              <UppercaseTitle text={project.title} />\n\n              <Grid container spacing={1} sx={{ pb: 3, mt: -3 }}>\n                <Grid item>\n                  <CustomChip icon={<PersonIcon />} label={project.owner}/>\n                </Grid>\n                <Grid item>\n                  <CustomChip icon={<EmailIcon />} label={project.contact}/>\n                </Grid>\n                <Grid item>\n                  <CustomChip icon={<PublishedWithChangesIcon />} label={`Last update: ${project.lastUpdate}`}/>\n                </Grid>\n              </Grid>\n\n              {/* google-visualization-table-type-date table-cell */}\n\n              <Typography\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{ textAlign: 'justify', pb: 3, mb: 0 }}\n                gutterBottom\n              >\n                {parse(project.description)}\n              </Typography>\n\n              <DatasetDownloadButton project={project} />\n\n              <ExpandableSection\n                title=\"Sample Data\"\n                content={\n                  <>\n                    {project.rawDataTables.map((element, index) => (\n                      <Box\n                        key={index}\n                        sx={\n                          index < project.rawDataTables.length - 1\n                            ? { mb: 3 }\n                            : { mb: 1 }\n                        }\n                      >\n                        <ChartComponent\n                          chartData={{\n                            chartType: 'Table',\n                            sortAscending: true,\n                            frozenColumns: 1,\n                            sheetId: project.sheetId,\n                            ...element,\n                          }}\n                          themePreference={themePreference}\n                          isHomepage={false}\n                        />\n                      </Box>\n                    ))}\n                  </>\n                }\n              />\n            </Container>\n          </Box>\n\n          {project.charts.map((element, index) => (\n            <Box\n              key={index}\n              backgroundColor={\n                index % 2 == 0 ? 'customAlternateBackground' : ''\n              }\n            >\n              <Container\n                sx={{ pt: 4, pb: 4 }}\n                height=\"auto\"\n                className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n              >\n                <Typography variant=\"h6\" color=\"text.primary\">\n                  {index + 1}. {element.title}\n                </Typography>\n                <ChartComponent\n                  chartData={{\n                    chartIndex: index,\n                    sheetId: project.sheetId,\n                    ...element,\n                  }}\n                />\n                <Box sx={{ m: 3 }}>\n                  <Typography\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                    sx={{ mb: 3 }}\n                  >\n                    {element.subtitle && parse(element.subtitle)}\n                    {Object.keys(tab)[index] == index &&\n                      element.subcharts &&\n                      element.subcharts[Object.values(tab)[index]]\n                        .subchartSubtitle &&\n                      parse(\n                        element.subcharts[Object.values(tab)[index]]\n                          .subchartSubtitle\n                      )}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {element.reference && parse(element.reference)}\n                    {Object.keys(tab)[index] == index &&\n                      element.subcharts &&\n                      element.subcharts[Object.values(tab)[index]].reference &&\n                      parse(\n                        element.subcharts[Object.values(tab)[index]].reference\n                      )}\n                  </Typography>\n                </Box>\n              </Container>\n            </Box>\n          ))}\n\n          {project.charts.length % 2 != 0 ? <Divider /> : <></>}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["StyledAccordion","styled","MuiAccordion","theme","expanded","color","palette","text","secondary","backgroundImage","backgroundColor","background","default","boxShadow","shadows","transition","transitions","StyledAccordionSummary","MuiAccordionSummary","marginTop","spacing","flexDirection","paddingLeft","primary","textDecoration","main","panel","title","content","useState","undefined","setExpanded","onChange","event","isExpanded","expandIcon","ExpandMore","id","Typography","component","variant","DatasetDownloadButton","project","isDisabled","sheetId","Box","href","target","rel","Button","disabled","Link","CustomChip","icon","label","Chip","size","themePreference","useContext","LinkContext","setUnderlineLink","useParams","setProject","loading","setLoading","TabContext","tab","setTab","useEffect","data","p","temp","i","charts","length","width","Container","sx","pt","pb","UppercaseTitle","Grid","container","mt","item","Person","owner","Email","contact","PublishedWithChanges","lastUpdate","textAlign","mb","gutterBottom","parse","description","rawDataTables","map","element","index","ChartComponent","chartData","chartType","sortAscending","frozenColumns","isHomepage","height","className","ThemePreferences","chartIndex","m","subtitle","Object","keys","subcharts","values","subchartSubtitle","reference","Divider"],"sourceRoot":""}