{"version":3,"file":"static/js/781.e104d170.chunk.js","mappings":"kUAgBA,SAASA,EAAT,GAAsC,IAAZC,EAAW,EAAXA,QAClBC,EAAgC,MAAnBD,EAAQE,QAC3B,OACE,cACEC,KACEF,EACI,GADM,iDAEoCD,EAAQE,SAExDE,OAAO,SACPC,IAAI,aAPN,UASE,UAACC,EAAA,EAAD,CAAQC,SAAUN,EAAYO,QAAQ,YAAtC,WACE,SAAC,MAAD,IADF,OAGGP,EAAa,cAAgB,oBAMtC,IAuJA,EAvJgB,SAAC,GAAyB,IAAvBQ,EAAsB,EAAtBA,gBACjB,GAA8BC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzC,eAAUC,GAAV,WACMC,GAAOC,EAAAA,EAAAA,MAAPD,GACN,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOf,EAAP,KAAgBgB,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAAsBR,EAAAA,EAAAA,YAAWS,EAAAA,GAAjC,eAAOC,EAAP,KAAYC,EAAZ,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAERC,EAAAA,KAAS,SAACC,GACR,GAAIA,EAAEX,KAAOA,EAAI,CACfG,GAAW,UAAKQ,IAEhB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIF,EAAEG,OAAOC,OAAQF,IACnCD,EAAKC,GAAK,EAEZL,EAAOI,GACPP,GAAW,OAIfN,EAAiB,aAChB,CAACC,EAAID,KAGN,8BACGK,IACC,UAACY,EAAA,EAAD,CAAKC,MAAM,OAAX,WACE,SAACD,EAAA,EAAD,WACE,UAACE,EAAA,EAAD,CAAWC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAA5B,WACE,SAACC,EAAA,EAAD,CAAiBC,KAAMpC,EAAQqC,SAC/B,mBACA,mBACA,SAACC,EAAA,EAAD,CACE9B,QAAQ,QACR+B,MAAM,iBACNP,GAAI,CAAEQ,UAAW,WACjBC,cAAY,EAJd,UAMGC,EAAAA,EAAAA,IAAM1C,EAAQ2C,gBAEjB,mBACA,SAACL,EAAA,EAAD,CACE9B,QAAQ,QACR+B,MAAM,eACNP,GAAI,CAAEY,WAAY,UAHpB,6BAOA,SAACN,EAAA,EAAD,CAAY9B,QAAQ,QAAQ+B,MAAM,iBAAiBE,cAAY,EAA/D,SACGzC,EAAQ6C,SAEX,SAACP,EAAA,EAAD,CACE9B,QAAQ,QACR+B,MAAM,eACNP,GAAI,CAAEY,WAAY,UAHpB,uBAOA,SAACN,EAAA,EAAD,CAAY9B,QAAQ,QAAQ+B,MAAM,iBAAiBE,cAAY,EAA/D,SACGzC,EAAQ8C,gBAEX,mBACA,SAAC/C,EAAD,CAAgBC,QAASA,KACzB,mBACA,mBACA,SAACsC,EAAA,EAAD,CACE9B,QAAQ,QACR+B,MAAM,eACNP,GAAI,CAAEY,WAAY,UAHpB,0BAOC5C,EAAQ+C,cAAcC,KAAI,SAACC,EAASC,GAAV,OACzB,SAACrB,EAAA,EAAD,CAEEG,GAAI,CAAEC,GAAI,GACVkB,UAAW1C,EAAkB,YAAc,GAH7C,UAKE,SAAC2C,EAAA,EAAD,CACEC,WAAS,QACPC,UAAW,QACXC,eAAe,EACfC,cAAe,EACftD,QAASF,EAAQE,SACd+C,MAVFC,WAkBZlD,EAAQ2B,OAAOqB,KAAI,SAACC,EAASC,GAAV,OAClB,SAACrB,EAAA,EAAD,CAEE4B,gBACEP,EAAQ,GAAK,EAAI,4BAA8B,GAHnD,UAME,UAACnB,EAAA,EAAD,CACEC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GACjBiB,UAAW1C,EAAkB,YAAc,GAC3CiD,OAAO,OAHT,WAKE,UAACpB,EAAA,EAAD,CAAY9B,QAAQ,KAAK+B,MAAM,eAA/B,UACGW,EAAQ,EADX,KACgBD,EAAQZ,UAExB,SAACR,EAAA,EAAD,CACE6B,OAA6B,WAArBT,EAAQK,UAAyB,GAAK,OAC9CK,UAAgC,WAArBV,EAAQK,UAAyB,GAAK,IAFnD,UAIE,SAACF,EAAA,EAAD,CACEC,WAAS,QACPO,WAAYV,EACZhD,QAASF,EAAQE,SACd+C,QAKT,UAACX,EAAA,EAAD,CACE9B,QAAQ,QACR+B,MAAM,iBACNE,cAAY,EACZT,GAAI,CACF6B,GAAI,EACJC,WAAY,EACZC,YAAa,EACbC,aAAc,EACdxB,UAAW,WATf,UAYGS,EAAQgB,WAAYvB,EAAAA,EAAAA,IAAMO,EAAQgB,UAClCC,OAAOC,KAAK/C,GAAK8B,IAAUA,GAC1BD,EAAQmB,WACRnB,EAAQmB,UAAUF,OAAOG,OAAOjD,GAAK8B,IAAQoB,UAC7C5B,EAAAA,EAAAA,IAAMO,EAAQmB,UAAUF,OAAOG,OAAOjD,GAAK8B,IAAQoB,SACpDrB,EAAQsB,YAAa7B,EAAAA,EAAAA,IAAMO,EAAQsB,kBA3CnCrB,MAiDRlD,EAAQ2B,OAAOC,OAAS,GAAK,GAAI,SAAC4C,EAAA,EAAD,KAAc","sources":["Pages/Project/Project.jsx"],"sourcesContent":["// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport UnderlinedTitle from '../../Components/UnderlinedTitle';\nimport { Box, Typography, Container, Divider, Button } from '@mui/material';\nimport data from '../../temp_database.json';\nimport './Project.css';\n\nimport { MdLink } from 'react-icons/md';\n\n// Download button: download raw dataset\nfunction DownloadButton({ project }) {\n  const isDisabled = project.sheetId == null ? true : false;\n  return (\n    <a\n      href={\n        isDisabled\n          ? ''\n          : `https://docs.google.com/spreadsheets/d/${project.sheetId}`\n      }\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button disabled={isDisabled} variant=\"contained\">\n        <MdLink />\n        &nbsp;\n        {isDisabled ? 'COMING SOON' : 'FULL DATASET'}\n      </Button>\n    </a>\n  );\n}\n\nconst Project = ({ prefersDarkMode }) => {\n  const [_, setUnderlineLink] = useContext(LinkContext);\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    data.map((p) => {\n      if (p.id === id) {\n        setProject({ ...p });\n        let temp = {};\n        for (let i = 0; i < p.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n      }\n    });\n\n    setUnderlineLink('project');\n  }, [id, setUnderlineLink]);\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          <Box>\n            <Container sx={{ pt: 4, pb: 4 }}>\n              <UnderlinedTitle text={project.title} />\n              <br />\n              <br />\n              <Typography\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{ textAlign: 'justify' }}\n                gutterBottom\n              >\n                {parse(project.description)}\n              </Typography>\n              <br />\n              <Typography\n                variant=\"body1\"\n                color=\"text.primary\"\n                sx={{ fontWeight: 'medium' }}\n              >\n                Dataset Owner:\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n                {project.owner}\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"text.primary\"\n                sx={{ fontWeight: 'medium' }}\n              >\n                Contact:\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n                {project.onwerContact}\n              </Typography>\n              <br />\n              <DownloadButton project={project} />\n              <br />\n              <br />\n              <Typography\n                variant=\"body1\"\n                color=\"text.primary\"\n                sx={{ fontWeight: 'medium' }}\n              >\n                Sample Data:\n              </Typography>\n              {project.rawDataTables.map((element, index) => (\n                <Box\n                  key={index}\n                  sx={{ pt: 1 }}\n                  className={prefersDarkMode ? 'dark-mode' : ''}\n                >\n                  <ChartComponent\n                    chartData={{\n                      chartType: 'Table',\n                      sortAscending: true,\n                      frozenColumns: 1,\n                      sheetId: project.sheetId,\n                      ...element,\n                    }}\n                  />\n                </Box>\n              ))}\n            </Container>\n          </Box>\n\n          {project.charts.map((element, index) => (\n            <Box\n              key={index}\n              backgroundColor={\n                index % 2 == 0 ? 'customAlternateBackground' : ''\n              }\n            >\n              <Container\n                sx={{ pt: 4, pb: 4 }}\n                className={prefersDarkMode ? 'dark-mode' : ''}\n                height=\"auto\"\n              >\n                <Typography variant=\"h6\" color=\"text.primary\">\n                  {index + 1}. {element.title}\n                </Typography>\n                <Box\n                  height={element.chartType == 'HeatMap' ? '' : '60vw'}\n                  maxHeight={element.chartType == 'HeatMap' ? '' : 600}\n                >\n                  <ChartComponent\n                    chartData={{\n                      chartIndex: index,\n                      sheetId: project.sheetId,\n                      ...element,\n                    }}\n                  />\n                </Box>\n\n                <Typography\n                  variant=\"body1\"\n                  color=\"text.secondary\"\n                  gutterBottom\n                  sx={{\n                    mt: 2,\n                    paddingTop: 3,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                    textAlign: 'justify',\n                  }}\n                >\n                  {element.subtitle && parse(element.subtitle)}\n                  {Object.keys(tab)[index] == index &&\n                    element.subcharts &&\n                    element.subcharts[Object.values(tab)[index]].subtext &&\n                    parse(element.subcharts[Object.values(tab)[index]].subtext)}\n                  {element.reference && parse(element.reference)}\n                </Typography>\n              </Container>\n            </Box>\n          ))}\n\n          {project.charts.length % 2 != 0 ? <Divider /> : <></>}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["DownloadButton","project","isDisabled","sheetId","href","target","rel","Button","disabled","variant","prefersDarkMode","useContext","LinkContext","setUnderlineLink","id","useParams","useState","setProject","loading","setLoading","TabContext","tab","setTab","useEffect","data","p","temp","i","charts","length","Box","width","Container","sx","pt","pb","UnderlinedTitle","text","title","Typography","color","textAlign","gutterBottom","parse","description","fontWeight","owner","onwerContact","rawDataTables","map","element","index","className","ChartComponent","chartData","chartType","sortAscending","frozenColumns","backgroundColor","height","maxHeight","chartIndex","mt","paddingTop","paddingLeft","paddingRight","subtitle","Object","keys","subcharts","values","subtext","reference","Divider"],"sourceRoot":""}