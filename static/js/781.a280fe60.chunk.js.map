{"version":3,"file":"static/js/781.a280fe60.chunk.js","mappings":"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","sources":["Pages/Project/Project.jsx"],"sourcesContent":["// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport UnderlinedTitle from '../../Components/UnderlinedTitle';\nimport { Box, Typography, Container, Divider, Button } from '@mui/material';\nimport data from '../../temp_database.json';\nimport './Project.css';\n\nimport { MdLink } from 'react-icons/md';\n\n// Download button: download raw dataset\nfunction DownloadButton({ project }) {\n  const isDisabled = project.sheetId == null ? true : false;\n  return (\n    <a\n      href={\n        isDisabled\n          ? ''\n          : `https://docs.google.com/spreadsheets/d/${project.sheetId}`\n      }\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <Button disabled={isDisabled} variant=\"contained\">\n        <MdLink />\n        &nbsp;\n        {isDisabled ? 'COMING SOON' : 'FULL DATASET'}\n      </Button>\n    </a>\n  );\n}\n\nconst Project = ({ prefersDarkMode }) => {\n  const [_, setUnderlineLink] = useContext(LinkContext);\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    data.map((p) => {\n      if (p.id === id) {\n        setProject({ ...p });\n        setLoading(true);\n      }\n    });\n\n    setUnderlineLink('project');\n  }, [id, setUnderlineLink]);\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          <Box>\n            <Container sx={{ pt: 4, pb: 4 }}>\n              <UnderlinedTitle text={project.title} />\n              <br />\n              <br />\n              <Typography\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{ textAlign: 'justify' }}\n                gutterBottom\n              >\n                {parse(project.description)}\n              </Typography>\n              <br />\n              <Typography\n                variant=\"body1\"\n                color=\"text.primary\"\n                sx={{ fontWeight: 'medium' }}\n              >\n                Dataset Owner:\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n                {project.owner}\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"text.primary\"\n                sx={{ fontWeight: 'medium' }}\n              >\n                Contact:\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n                {project.onwerContact}\n              </Typography>\n              <br />\n              <DownloadButton project={project} />\n              <br />\n              <br />\n              <Typography\n                variant=\"body1\"\n                color=\"text.primary\"\n                sx={{ fontWeight: 'medium' }}\n              >\n                Sample Data:\n              </Typography>\n              {project.rawDataTables.map((element, index) => (\n                <Box\n                  key={index}\n                  sx={{ pt: 1 }}\n                  className={prefersDarkMode ? 'dark-mode' : ''}\n                >\n                  <ChartComponent\n                    chartData={{\n                      chartType: 'Table',\n                      sortAscending: true,\n                      frozenColumns: 1,\n                      sheetId: project.sheetId,\n                      ...element,\n                    }}\n                  />\n                </Box>\n              ))}\n            </Container>\n          </Box>\n\n          {project.charts.map((element, index) => (\n            <Box\n              key={index}\n              backgroundColor={\n                index % 2 == 0 ? 'customAlternateBackground' : ''\n              }\n            >\n              <Container\n                sx={{ pt: 4, pb: 4 }}\n                className={prefersDarkMode ? 'dark-mode' : ''}\n                height=\"auto\"\n              >\n                <Typography variant=\"h6\" color=\"text.primary\">\n                  {index + 1}. {element.title}\n                </Typography>\n                <Box\n                  height={element.chartType == 'HeatMap' ? '' : '60vw'}\n                  maxHeight={element.chartType == 'HeatMap' ? '' : 600}\n                >\n                  <ChartComponent\n                    chartData={{\n                      sheetId: project.sheetId,\n                      ...element,\n                    }}\n                  />\n                </Box>\n\n                <Typography\n                  variant=\"body1\"\n                  color=\"text.secondary\"\n                  gutterBottom\n                  sx={{\n                    mt: 2,\n                    paddingTop: 3,\n                    paddingLeft: 2,\n                    paddingRight: 2,\n                    textAlign: 'justify',\n                  }}\n                >\n                  {element.subtitle && parse(element.subtitle)}\n                </Typography>\n              </Container>\n            </Box>\n          ))}\n\n          {project.charts.length % 2 != 0 ? <Divider /> : <></>}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["DownloadButton","project","isDisabled","sheetId","href","target","rel","Button","disabled","variant","prefersDarkMode","useContext","LinkContext","setUnderlineLink","id","useParams","useState","setProject","loading","setLoading","useEffect","data","p","Box","width","Container","sx","pt","pb","UnderlinedTitle","text","title","Typography","color","textAlign","gutterBottom","parse","description","fontWeight","owner","onwerContact","rawDataTables","map","element","index","className","ChartComponent","chartData","chartType","sortAscending","frozenColumns","charts","backgroundColor","height","maxHeight","mt","paddingTop","paddingLeft","paddingRight","subtitle","length","Divider"],"sourceRoot":""}