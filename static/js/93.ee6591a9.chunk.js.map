{"version":3,"file":"static/js/93.ee6591a9.chunk.js","mappings":"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","sources":["Graphs/ChartSubstituteComponents/AirQualityIndexTable.jsx","Pages/Home/GetInTouch.jsx","Graphs/SampleDataTable.jsx","Pages/Project/ExpandableSection.jsx","Components/AirQualityHelper.jsx","Components/DatasetDownload/DatasetDownloadDialog.jsx","Pages/Project/Project.jsx"],"sourcesContent":["import { Box, Table, TableBody, TableCell, TableHead, TableRow, Stack, styled } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport ChartComponent from '../ChartComponent';\n\nexport const StyledTable = styled(Table)(({ theme, isTiny }) => ({\n  minWidth: isTiny || 700,\n  '& th, td': {\n    fontSize: isTiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: isTiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { isTiny, hideAQIDescription } = props;\n  // Air quality index legend\n  const theme = useTheme();\n\n  const airQualityIndexCategories = [\n    {\n      name: 'Good',\n      color: theme.palette.chart.optionsColors.aqi[0],\n      aqi: '0 - 50',\n      rawPM2_5: '0.0 - 12.0',\n      description: 'Air quality is satisfactory, and air pollution poses little or no risk',\n      suggestion: 'Enjoy the clean air'\n    },\n    {\n      name: 'Moderate',\n      color: theme.palette.chart.optionsColors.aqi[1],\n      aqi: '51 - 100',\n      rawPM2_5: '12.1 - 35.4',\n      description: 'Air quality is acceptable. However, there may be a risk for some people, particularly those who are unusually sensitive to air pollution',\n      suggestion: 'Individuals with respiratory issues might need to reduce prolonged outdoor exertion'\n    },\n    {\n      name: 'Unhealthy for Sensitive Groups',\n      color: theme.palette.chart.optionsColors.aqi[2],\n      aqi: '101 - 150',\n      rawPM2_5: '35.5 - 55.4',\n      description: 'Members of sensitive groups may experience health effects. The general public is less likely to be affected',\n      suggestion: 'Children and individuals with respiratory issues should limit outdoor exertion'\n    },\n    {\n      name: 'Unhealthy',\n      color: theme.palette.chart.optionsColors.aqi[3],\n      aqi: '151 - 200',\n      rawPM2_5: '55.5 - 150.4',\n      description: 'Some members of the general public may experience health effects; members of sensitive groups may experience more serious health effects',\n      suggestion: ''\n    },\n    {\n      name: 'Very Unhealthy',\n      color: theme.palette.chart.optionsColors.aqi[4],\n      aqi: '201 - 300',\n      rawPM2_5: '150.5 - 250.4',\n      description: 'Health alert: The risk of health effects is increased for everyone',\n      suggestion: ''\n    },\n    {\n      name: 'Hazardous',\n      color: theme.palette.chart.optionsColors.aqi[5],\n      aqi: '300 - 500',\n      rawPM2_5: '250.5 - 550.5',\n      description: 'Health warning of emergency conditions: everyone is more likely to be affected',\n      suggestion: ''\n    },\n  ];\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" isTiny={isTiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5 Concentration\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n              {!hideAQIDescription && <TableCell align=\"left\">CITIESair&apos; Suggested Actions</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {airQualityIndexCategories.map((element) => (\n              <TableRow\n                key={element.name}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: element.color }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.name}\n                </TableCell>\n                <TableCell align=\"right\">{element.aqi}</TableCell>\n                <TableCell align=\"right\">\n                  {element.rawPM2_5}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription && <TableCell align=\"left\">{element.suggestion}</TableCell>}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n      {!hideAQIDescription\n        && (\n          <ChartComponent\n            chartHeight=\"4rem\"\n            chartData={\n              {\n                sheetId: '157f6vu47RBEvnBnW24jGI7cz-ov1aSBUFPdkb5sDKDc',\n                gid: 1958405288,\n                query: 'SELECT * WHERE A = \"US AQI\"',\n                headers: 1,\n                chartType: 'BarChart',\n                columns: [0, 1, 3, 5, 7, 9, 11],\n                options: {\n                  legend: { position: 'none' },\n                  enableInteractivity: false,\n                  hAxis: {\n                    ticks: [0, 50, 100, 150, 200, 300, 500]\n                  },\n                  chartArea:\n                  {\n                    width: { portrait: '98%', landscape: '50%' },\n                    height: { portrait: '20%', landscape: '30%' }\n                  },\n                  isStacked: true,\n                  colors: 'aqi',\n                  bar: { groupWidth: '100%' }\n                }\n              }\n            }\n          />\n        )}\n    </>\n\n  );\n}\n\nexport default AirQualityIndexTable;\n","import { Typography, Container, Paper, Box, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport parse from 'html-react-parser';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nconst IFrameWrapper = styled(Box)(({ theme }) => ({\n  filter: theme.palette.mode === 'dark' && 'invert(0.848) hue-rotate(180deg)',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: theme.spacing(2),\n  height: '90vh',\n  maxHeight: '980px',\n  [theme.breakpoints.down('sm')]: {\n    marginLeft: theme.spacing(-2),\n    marginRight: theme.spacing(-2),\n  },\n}));\n\nfunction GetInTouch() {\n  const googleFormLink = 'https://docs.google.com/forms/d/e/1FAIpQLScnPA_ohsOvyZoO9QfjNk7shfXEyUGxOfxrpGzXq0VOSxjwbA/';\n  return (\n    <Container>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n\n      <Box maxWidth=\"md\" margin=\"auto\">\n        <Paper elevation={2} sx={{ p: 3 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {parse(jsonData.getInTouch.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <Container sx={{ mt: 3, textAlign: 'center' }}>\n            <Button\n              href={`${googleFormLink}/viewform`}\n              onClick={() => {\n                Tracking.sendEventAnalytics(Tracking.Events.openContactFormInExternalTab);\n              }}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"contained\"\n              size=\"small\"\n            >\n              <LaunchIcon sx={{ fontSize: '1rem' }} />\n              &nbsp;\n              OPEN FORM\n            </Button>\n          </Container>\n          {/* <IFrameWrapper>\n            <iframe\n              title=\"Survey Google Form Link\"\n              src={`${googleFormLink}viewform?embedded=true`}\n              width=\"100%\"\n              height=\"100%\"\n            >\n              Loading...\n            </iframe>\n          </IFrameWrapper> */}\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n\nexport default GetInTouch;\n","import { useState, useEffect, useContext } from 'react';\nimport { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { fetchDataFromSheet, generateRandomID } from './GoogleChartHelper';\nimport { GoogleContext } from '../ContextProviders/GoogleContext';\n\nfunction SampleDataTable(props) {\n  const { chartData, marginBottom } = props;\n  const [google, _] = useContext(GoogleContext);\n  const [chartWrapper, setChartWrapper] = useState(null);\n\n  const [chartID, __] = useState(generateRandomID());\n\n  // Call this function to fetch the data and draw the initial chart\n  useEffect(() => {\n    if (google && !chartWrapper) {\n      fetchDataFromSheet({ chartData })\n        .then((response) => {\n          const dataTable = response.getDataTable();\n\n          const wrapper = new google.visualization.ChartWrapper({\n            chartType: 'Table',\n            dataTable,\n            options: {\n              width: '100%',\n              sortAscending: true,\n              frozenColumns: 1,\n              cssClassNames: {\n                headerRow: 'header-row',\n                tableRow: 'table-row',\n                oddTableRow: 'odd-table-row',\n                selectedTableRow: 'selected-table-row',\n                hoverTableRow: 'hover-table-row',\n                headerCell: 'header-cell',\n                tableCell: 'table-cell',\n              }\n            },\n            view: {\n              columns: chartData.columns\n            },\n            containerId: chartID\n          });\n          setChartWrapper(wrapper);\n          wrapper.draw();\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }, [google]);\n\n  return (\n    <StyledTable marginBottom={marginBottom}>\n      <Box id={chartID} />\n    </StyledTable>\n  );\n}\n\n// Styled component for the Google Table chart\nconst StyledTable = styled('div')(({ theme, marginBottom }) => ({\n  marginBottom: theme.spacing(marginBottom),\n  '& table': {\n    fontSize: '0.75rem',\n  },\n  '& .header-row, .frozen-column:first-of-type': {\n    backgroundColor: theme.palette.customBackground,\n    pointerEvents: 'none',\n    textAlign: 'left'\n  },\n  '& .table-row, & .odd-table-row': {\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.customAlternateBackground,\n  },\n  '& .table-row .table-cell:first-of-type, & .odd-table-row .table-cell:first-of-type':\n  {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.customAlternateBackground,\n  },\n\n  '& .frozen-column': {\n    borderRightWidth: '1px !important'\n  }\n}));\n\nexport default SampleDataTable;\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n    color: theme.palette.text.secondary,\n    backgroundImage: 'none',\n    backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n    boxShadow: expanded ? theme.shadows : 'none',\n    transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n    marginTop: expanded ? theme.spacing(3) : 0,\n    flexDirection: 'row-reverse',\n    paddingLeft: expanded ? theme.spacing(1) : 0,\n    '& .MuiTypography-root': {\n        color: theme.palette.text.primary,\n        textDecoration: 'underline',\n        transition: 'none',\n        '&:hover': {\n            color: theme.palette.primary.main,\n        },\n    },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n    const [expanded, setExpanded] = useState(undefined);\n\n    const handleAccordionChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : undefined);\n\n        Tracking.sendEventAnalytics(isExpanded ? Tracking.Events.expandSampleData : Tracking.Events.collapseSampleData);\n    };\n\n    return (\n        <Box>\n            <StyledAccordion\n                expanded={expanded === \"panel1\"}\n                onChange={handleAccordionChange(\"panel1\")}\n                transitionDuration={0}\n            >\n                <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n                    <Tooltip title={expanded ? \"Click to collapse\" : \"Click to expand\"}>\n                        <Typography component=\"a\" variant=\"body1\">\n                            {title}\n                        </Typography>\n                    </Tooltip>\n                </StyledAccordionSummary>\n                <MuiAccordionDetails>\n                    {content}\n                </MuiAccordionDetails>\n            </StyledAccordion>\n        </Box>\n    );\n}\n\nexport default ExpandableSection;\n","import { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport { Fab, Fade, Popper, Paper, Typography, Stack } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport AirIcon from '@mui/icons-material/Air';\nimport { FadeInButtonForSpeedDial } from './Header/FadeInButtonForSpeedDial';\n\nimport * as Tracking from '../Utils/Tracking';\nimport AirQualityIndexTable from '../Graphs/ChartSubstituteComponents/AirQualityIndexTable';\n\nexport default function AirQualityIndexLegendQuickGlance(props) {\n  // Mechanism for opening and closing the Quick Glance on hover\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handlePopperOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    Tracking.sendEventAnalytics(Tracking.Events.airQualityIndexLegendQuickGlance);\n  };\n  const handlePopperClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  // Air quality index legend\n  const theme = useTheme();\n\n  return (\n    <>\n      <FadeInButtonForSpeedDial {...props} distanceFromBottomOfWindow=\"5.5rem\">\n        <Fab\n          sx={{ mt: 1 }}\n          aria-owns={open ? Tracking.Events.airQualityIndexLegendQuickGlance : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopperOpen}\n          onMouseLeave={handlePopperClose}\n          onClick={(event) => isMobile && (open ? handlePopperClose() : handlePopperOpen(event))}\n          aria-label={Tracking.Events.airQualityIndexLegendQuickGlance}\n          color=\"primary\"\n        >\n          <Stack direction=\"column\" alignItems=\"center\">\n            <AirIcon fontSize=\"1rem\" />\n            <Typography variant=\"body2\" fontWeight=\"500\">\n              AQI\n            </Typography>\n          </Stack>\n        </Fab>\n      </FadeInButtonForSpeedDial>\n\n      <Popper\n        id={Tracking.Events.airQualityIndexLegendQuickGlance}\n        sx={{\n          pointerEvents: 'none',\n          mt: -1\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"top-end\"\n        onClose={handlePopperClose}\n        keepMounted\n        disableRestoreFocus\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper elevation={8} sx={{ py: 0.5, mb: 1 }}>\n              <Typography sx={{ mx: 2, mt: 1 }} color=\"text.disabled\" variant=\"body1\" fontWeight={500}>\n                AQI at quick glance\n              </Typography>\n              <AirQualityIndexTable isTiny hideAQIDescription />\n            </Paper>\n          </Fade>\n        )}\n\n      </Popper>\n    </>\n  );\n}\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { Box, Link, Typography, Stack, Select, FormControl, MenuItem, Grid, Chip, Dialog, Button, DialogActions, DialogContent, useMediaQuery, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { RawDatasetsMetadataContext } from '../../ContextProviders/RawDatasetsMetadataContext';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DataObjectIcon from '@mui/icons-material/DataObject';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport { fetchDataFromURL } from './DatasetFetcher';\n\nexport default function DatasetDownloadDialog(props) {\n  const { project } = props;\n  const rawDatasetsMetadata = useContext(RawDatasetsMetadataContext);\n  const [datasets, setDatasets] = useState();\n\n  useEffect(() => {\n    if (!project || !rawDatasetsMetadata) return;\n    console.log(rawDatasetsMetadata);\n    setDatasets(rawDatasetsMetadata[project?.id]); // get all the dataset(s) of this project\n  }, [project, rawDatasetsMetadata]);\n\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  function getOwnerString(owners) {\n    if (!owners || owners.length === 0) {\n      return 'the relevant owners';\n    } else if (owners.length === 1) {\n      return owners[0];\n    } else if (owners.length === 2) {\n      return owners.join(' and ');\n    } else {\n      const lastOwner = owners.pop();\n      const oxfordCommaOwners = owners.join(', ');\n      return `${oxfordCommaOwners}, and ${lastOwner}`;\n    }\n  }\n\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          handleOpen();\n          Tracking.sendEventAnalytics(Tracking.Events.rawDatasetButtonClicked, {\n            project_id: project.id\n          });\n        }}\n        variant=\"contained\"\n      >\n        <DataObjectIcon sx={{ fontSize: '1rem' }} />&nbsp;Raw Dataset\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"lg\"\n        fullWidth\n        fullScreen={smallScreen}\n        keepMounted\n      >\n        {(\n          smallScreen &&\n          <DialogActions justifyContent=\"flex-start\">\n            <Button autoFocus onClick={handleClose}>\n              <ChevronLeftIcon sx={{ fontSize: '1rem' }} />Back\n            </Button>\n          </DialogActions>\n        )}\n\n        <DialogContent sx={{\n          px: smallScreen ? 2 : 3,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'start',\n          height: '100%'\n        }}>\n          <Chip label={project.title} size=\"small\" sx={{ mb: 1 }} />\n          <Typography variant=\"h6\" >\n            Preview and download raw dataset(s)\n          </Typography>\n          <DatasetSelectorAndPreviewer datasets={datasets} smallScreen={smallScreen} project={project} />\n          {\n            datasets &&\n            <Typography variant=\"caption\" sx={{ mb: 3, fontStyle: 'italic' }} >\n              This dataset is provided by the CITIES Dashboard with the support of {getOwnerString(project.owners)}. Should you intend to utilize this dataset for your project, research, or publication, we kindly request that you notify us at <Link href='mailto:nyuad.cities@nyu.edu'>nyuad.cities@nyu.edu</Link> to discuss citation requirements.\n            </Typography>\n          }\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nconst DatasetSelectorAndPreviewer = (props) => {\n  const { datasets, smallScreen, project } = props;\n  const [previewingDataset, setPreviewingDataset] = useState();\n  const [previewingDatasetId, setPreviewingDatasetId] = useState();\n\n  // Preview the first version of the first dataset initially\n  useEffect(() => {\n    if (datasets?.length > 0) {\n      setPreviewingDataset(datasets[0]?.versions[0]);\n      setPreviewingDatasetId(datasets[0]?.id);\n      fetchDataFromURL(datasets[0]?.versions[0]?.rawLink, 'csv').then((data) => {\n        setPreviewingDataset({ ...datasets[0]?.versions[0], fetchedDataset: data });\n      });\n    }\n  }, [datasets]);\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"start\" spacing={3}>\n      <Grid item sm={12} md={6}>\n        <DatasetsTable\n          datasets={datasets}\n          smallScreen={smallScreen}\n          previewingDataset={previewingDataset}\n          setPreviewingDataset={setPreviewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          setPreviewingDatasetId={setPreviewingDatasetId}\n        />\n      </Grid>\n      <Grid item sm={12} md={6} maxWidth={smallScreen ? '100%' : 'unset'}>\n        <PreviewDataset\n          previewingDataset={previewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          project={project}\n          smallScreen={smallScreen}\n        />\n      </Grid>\n      <Grid item>\n      </Grid>\n    </Grid>\n  )\n};\n\nconst DatasetsTable = (props) => {\n  const { datasets, smallScreen, previewingDataset, setPreviewingDataset, previewingDatasetId, setPreviewingDatasetId } = props;\n  return (\n    <Table\n      size=\"small\"\n      sx={{\n        tableLayout: 'fixed',\n        '& td, div, .MuiMenuItem-root': {\n          fontSize: smallScreen ? '0.625rem !important' : '0.8rem !important'\n        }\n      }}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell sx={{ pl: 1 }}>\n            Dataset\n          </TableCell>\n          <TableCell sx={{ width: smallScreen ? '6.5rem' : '8rem' }}>Version</TableCell>\n          <TableCell sx={{ width: smallScreen ? '5rem' : '6rem' }}>\n            Size\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {datasets?.map((dataset) => (\n          <Dataset\n            smallScreen={smallScreen}\n            dataset={dataset}\n            previewingDataset={previewingDataset}\n            setPreviewingDataset={setPreviewingDataset}\n            isPreviewing={dataset.id === previewingDatasetId}\n            setPreviewingDatasetId={setPreviewingDatasetId}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nconst Dataset = (props) => {\n  const { dataset, setPreviewingDataset, isPreviewing, previewingDatasetId, setPreviewingDatasetId } = props;\n\n  const [fetchedDatasets, setFetchedDatasets] = useState({});\n\n  const latestVersionOfThisDataset = dataset?.versions[0] || {};\n  const [selectedVersionOfThisDataset, setSelectedVersionOfThisDataset] = useState(latestVersionOfThisDataset);\n\n  const handleVersionChange = (event) => {\n    // Loop through the array (allVersionsOfThisDataset) to find the one with the selected version\n    const selectedVersion = dataset?.versions.find(aDatasetVersion => {\n      return aDatasetVersion.version === event.target.value;\n    });\n    setSelectedVersionOfThisDataset(selectedVersion);\n    setPreviewingDatasetId(dataset.id);\n    setPreviewingDataset(selectedVersion);\n\n    fetchThisDataset(selectedVersion);\n  };\n\n  const fetchThisDataset = (selectedVersion) => {\n    // If this dataset version hasn't been fetched yet,\n    // fetch it and append it into the object fetchedDatasets\n    if (!fetchedDatasets[selectedVersion.version]) {\n      fetchDataFromURL(selectedVersion.rawLink, 'csv').then((data) => {\n        const selectedVersionWithFetchedDataset = { ...selectedVersion, fetchedDataset: data };\n        setPreviewingDataset(selectedVersionWithFetchedDataset);\n        setFetchedDatasets({\n          ...fetchedDatasets,\n          [selectedVersionWithFetchedDataset.version]: selectedVersionWithFetchedDataset\n        });\n      });\n    }\n    // If it has been fetched before, simply get it from memory \n    else {\n      setPreviewingDataset(fetchedDatasets[selectedVersion.version]);\n    }\n  }\n\n  const setThisDatasetToPreview = () => {\n    if (previewingDatasetId !== dataset.id) {\n      setPreviewingDatasetId(dataset.id);\n      setPreviewingDataset(selectedVersionOfThisDataset);\n      fetchThisDataset(selectedVersionOfThisDataset);\n    }\n  }\n\n  const theme = useTheme();\n\n  const formatFileSize = (sizeInBytes) => {\n    if (!sizeInBytes) return;\n\n    if (sizeInBytes < 1024 * 1024) {\n      return (sizeInBytes / 1024).toFixed(1) + \" KB\";\n    } else {\n      return (sizeInBytes / (1024 * 1024)).toFixed(1) + \" MB\";\n    }\n  }\n\n  return (\n    <>\n      <TableRow key={dataset.id}>\n        <TableCell\n          sx={{\n            pl: 1,\n            cursor: 'pointer',\n            background: isPreviewing && theme.palette.background.NYUpurpleLight\n          }}\n          onClick={setThisDatasetToPreview}>\n          {selectedVersionOfThisDataset?.name}\n        </TableCell>\n\n        <TableCell sx={{ background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          <FormControl size=\"small\">\n            <Select\n              value={selectedVersionOfThisDataset?.version}\n              onClick={() => {\n                if (dataset.versions.length <= 1) setThisDatasetToPreview();\n              }}\n              onChange={handleVersionChange}\n              variant=\"standard\"\n              MenuProps={{ disablePortal: true }}\n            >\n              {dataset?.versions.map((aDatasetVersion) => (\n                <MenuItem\n                  key={aDatasetVersion.version}\n                  value={aDatasetVersion.version}\n\n                >\n                  {aDatasetVersion.version}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell sx={{ background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          {formatFileSize(selectedVersionOfThisDataset?.sizeInBytes)}\n        </TableCell>\n      </TableRow>\n    </>\n  )\n}\n\nconst PreviewDataset = (props) => {\n  const { previewingDataset, previewingDatasetId, project, smallScreen } = props;\n  const downloadDatasetName = `[${project.id}] ${previewingDataset?.name}-${previewingDataset?.version}.csv`;\n\n  const theme = useTheme();\n\n  const downloadPreviewingDataset = () => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const blob = new Blob([previewingDataset?.fetchedDataset], { type: 'application/octet-stream' }); // create a Blob with the raw data\n    const url = URL.createObjectURL(blob); // create a download link for the Blob\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = downloadDatasetName;\n    document.body.appendChild(downloadLink);\n    downloadLink.click(); // simulate a click on the download link\n    URL.revokeObjectURL(url); // clean up by revoking the object URL\n    document.body.removeChild(downloadLink);\n  };\n\n  const [formattedData, setFormattedData] = useState('');\n  const [rowIndices, setRowIndices] = useState('');\n  const numFirstLastRowsToPreview = 5;\n\n  useEffect(() => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const csvData = previewingDataset?.fetchedDataset;\n    const lines = csvData.split('\\n');\n    const numRows = lines.length;\n\n    if (numRows <= numFirstLastRowsToPreview * 2) {\n      setFormattedData(csvData);\n      setRowIndices(Array.from({ length: numRows }, (_, index) => index + 1).join('\\n')); // +1 because rowNumber starts at 1 while index starts at 0\n    } else {\n\n      const firstRows = lines.slice(0, numFirstLastRowsToPreview);\n      const lastRows = lines.slice(numRows - numFirstLastRowsToPreview);\n\n      const numOfHiddenRows = numRows - 2 * numFirstLastRowsToPreview;\n\n      const middleRow = [`... [${numOfHiddenRows} rows hidden] ...`];\n\n      setFormattedData(firstRows.concat(middleRow).concat(lastRows).join('\\n'));\n      setRowIndices(\n        Array.from({\n          length: numFirstLastRowsToPreview * 2 + 1 // +1 to account for the middleRow\n        },\n          (_, index) => {\n            const rowIndex = index + 1; // +1 because rowNumber starts at 1 while index starts at 0\n            // Indices for the first rows\n            if (rowIndex < numFirstLastRowsToPreview + 1) {\n              return rowIndex;\n            }\n            // No index for the middle row\n            else if (rowIndex == numFirstLastRowsToPreview + 1) {\n              return '';\n            }\n            // Indices for the last rows\n            else {\n              return numOfHiddenRows + rowIndex - 1;\n            }\n          })\n          .join('\\n'));\n    }\n\n  }, [previewingDataset]);\n\n  return (\n    <Stack spacing={1}>\n      <Box sx={{ '& *': { fontFamily: \"monospace !important\" } }}>\n        <Chip\n          icon={<VisibilityIcon />}\n          label=\"Preview\"\n          size=\"small\"\n          sx={{\n            backgroundColor: theme.palette.customBackground,\n            borderRadius: 0,\n            borderTopLeftRadius: theme.spacing(1),\n            borderTopRightRadius: theme.spacing(1),\n            p: 1,\n            pb: 0,\n            mb: -1\n          }}\n        />\n        <Box\n          component=\"pre\"\n          sx={{\n            overflowX: 'auto',\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.customBackground,\n            p: 2,\n            borderRadius: theme.spacing(1),\n            borderTopLeftRadius: 0,\n            minHeight: \"5rem\",\n            width: smallScreen ? '100%' : 'unset',\n            marginTop: 0\n          }}\n        >\n          <Stack direction=\"row\">\n            <Box sx={{ mr: 2, userSelect: 'none' }}>\n              {rowIndices}\n            </Box>\n            <Box>\n              {formattedData}\n            </Box>\n          </Stack>\n        </Box>\n      </Box>\n      <Box textAlign=\"center\" >\n        <Button\n          variant=\"contained\"\n          sx={{\n            textTransform: 'none',\n            textAlign: 'left',\n            lineHeight: 1.1,\n            px: 1.5,\n            py: 1\n          }}\n          onClick={() => {\n            downloadPreviewingDataset();\n            Tracking.sendEventAnalytics(Tracking.Events.rawDatasetDownloaded, {\n              project_id: project.id,\n              dataset_id: previewingDatasetId,\n              dataset_name: previewingDataset.name,\n              dataset_version: previewingDataset.version\n            });\n          }}\n          disabled={!previewingDataset}\n        >\n          <DownloadIcon sx={{ fontSize: '1.25rem', mr: 0.5 }} />\n          {previewingDataset ? downloadDatasetName : \"No dataset available to download\"}\n        </Button>\n      </Box>\n    </Stack >\n  )\n}","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport SampleDataTable from '../../Graphs/SampleDataTable';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport CommentSection from '../../Components/CommentSection';\nimport { Box, Typography, Container, Divider, Chip, Grid, Tooltip } from '@mui/material';\n\nimport GetInTouch from '../Home/GetInTouch';\n\nimport ExpandableSection from './ExpandableSection';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport AirQualityIndexLegendQuickGlance from '../../Components/AirQualityHelper';\n\nimport data from '../../temp_database.json';\nimport jsonData from '../../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\n\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport DatasetDownloadDialog from '../../Components/DatasetDownload/DatasetDownloadDialog';\n\nimport { scrollToSection } from '../../Components/Header/MenuItemAsNavLink';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport { CommentCountsContext } from '../../ContextProviders/CommentCountsContext';\n\nimport { SheetsDataContext } from '../../ContextProviders/SheetsDataContext';\n\nimport ChartSubstituteComponentLoader from '../../Graphs/ChartSubstituteComponents/ChartSubstituteComponentLoader';\n\n// Custom Chip component to display metadata\nconst CustomChip = (props) => {\n  const { tooltipTitle, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle}>\n      <Chip\n        size=\"small\"\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = ({ themePreference }) => {\n  const [_, setCurrentPage, chartsTitlesList, setChartsTitlesList] = useContext(LinkContext);\n\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  const [commentCounts] = useContext(CommentCountsContext);\n  const commentCount = commentCounts[project.id];\n\n  const [sheetsData] = useContext(SheetsDataContext);\n  const lastUpdate = sheetsData[project.id];\n\n  // Update the page's title\n  useEffect(() => { if (project.title) document.title = `${project.title} | CITIES Dashboard`, [project] });\n\n  // Update the currentPage with the project's ID\n  // and the chartsTitle with all the charts' titles of the project\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    let chartsTitles = [];\n\n    data.map((project) => {\n      if (project.id === id) {\n        setProject({ ...project });\n        let temp = {};\n        for (let i = 0; i < project.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n        // Populate the array with all the charts' titles of the project\n        chartsTitles = project.charts.map((element, index) => ({ chartTitle: element.title, chartID: `chart-${index + 1}` }));\n      }\n    });\n\n    setCurrentPage(\"project\");\n    setChartsTitlesList(chartsTitles);\n\n  }, [id, setCurrentPage, setChartsTitlesList]);\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          {\n            project.id === 'air-quality' && <AirQualityIndexLegendQuickGlance />\n          }\n\n          <FullWidthBox>\n            <Container sx={{ pt: 4, pb: 4 }}>\n\n              <UppercaseTitle text={project.title} />\n\n              <Grid container spacing={1} sx={{ pb: 3, mt: -3 }}>\n                {\n                  project.owners.map((owner, index) => (\n                    <Grid item>\n                      <CustomChip\n                        key={index}\n                        icon={<PersonIcon />}\n                        label={owner}\n                        tooltipTitle=\"Dataset Owner\"\n                      />\n                    </Grid>\n                  ))\n                }\n\n                <Grid item>\n                  <CustomChip\n                    icon={<EmailIcon />}\n                    label={project.contact}\n                    tooltipTitle=\"Contact\"\n                    component=\"a\"\n                    href={`mailto:${project.contact}`}\n                    clickable\n                  />\n                </Grid>\n\n                <Grid item>\n                  <CustomChip\n                    icon={<BarChartIcon />}\n                    label={`${project.charts.length} Chart${project.charts.length > 1 && \"s\"}`}\n                    tooltipTitle=\"Number of Charts\"\n                    onClick={() => {\n                      scrollToSection(jsonData.charts.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.charts.id,\n                          destination_label: jsonData.project.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n\n                {\n                  lastUpdate &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<PublishedWithChangesIcon />}\n                      label={`Last update: ${lastUpdate}`}\n                      tooltipTitle=\"Last Update\" />\n                  </Grid>\n                }\n\n                {commentCount != null &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<CommentIcon />}\n                      label={`${commentCount} Comment${commentCounts[project.id] > 1 ? \"s\" : \"\"}`}\n                      tooltipTitle=\"Number of Comments\"\n                      onClick={() => {\n                        scrollToSection(jsonData.commentSection.id);\n                        Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                          {\n                            destination_id: jsonData.commentSection.id,\n                            destination_label: jsonData.commentSection.toString(),\n                            origin_id: 'chip'\n                          })\n                      }}\n                    />\n                  </Grid>}\n              </Grid>\n\n              <Typography\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{ textAlign: 'justify', pb: 3, mb: 0 }}\n                gutterBottom\n              >\n                {parse(project.description, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n\n              <DatasetDownloadDialog project={project} />\n\n              {/* <ExpandableSection\n                title=\"Sample Data\"\n                content={\n                  <>\n                    {project.rawDataTables.map((element, index) => (\n                      <SampleDataTable\n                        key={index}\n                        chartData={{ sheetId: project.sheetId, ...element }}\n                        marginBottom={(index < project.rawDataTables.length - 1) ? 3 : 1}\n                      />\n                    ))}\n                  </>\n                }\n              /> */}\n            </Container>\n          </FullWidthBox>\n\n          <Box id={jsonData.charts.id}>\n            {project.charts.map((element, index) => (\n              <FullWidthBox\n                id={chartsTitlesList[index].chartID} // set the chartWrapper's ID to help Navbar in Header scroll to\n                key={index}\n                backgroundColor={\n                  index % 2 == 0 ? 'customAlternateBackground' : ''\n                }\n              >\n                <Container\n                  sx={{ pt: 4, pb: 4 }}\n                  height=\"auto\"\n                  className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                >\n                  <Typography variant=\"h6\" color=\"text.primary\">\n                    {index + 1}. {element.title}\n                  </Typography>\n\n                  {/* Either display the regular ChartComponent, or substitute with a customized component in ../../Graphs/ChartSubstituteComponents/ (if specified) */}\n                  {element.chartSubstituteComponentName ?\n                    <ChartSubstituteComponentLoader chartSubstituteComponentName={element.chartSubstituteComponentName} />\n                    : (\n                      <ChartComponent\n                        chartData={{\n                          chartIndex: index,\n                          sheetId: project.sheetId,\n                          ...element,\n                        }}\n                      />\n                    )}\n\n                  <Box sx={{ my: 3 }}>\n                    <Typography\n                      variant=\"body1\"\n                      color=\"text.secondary\"\n                    >\n                      {element.subtitle && parse(element.subtitle, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]]\n                          .subchartSubtitle &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]]\n                            .subchartSubtitle, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {element.reference && parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]].reference &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]].reference, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                  </Box>\n                </Container>\n              </FullWidthBox>\n            ))}\n          </Box>\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n            <CommentSection pageID={project.id} />\n          </FullWidthBox>\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n            <GetInTouch />\n          </FullWidthBox>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["StyledTable","styled","Table","theme","isTiny","minWidth","fontSize","color","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","useTheme","airQualityIndexCategories","name","chart","optionsColors","aqi","rawPM2_5","description","suggestion","overflow","size","sx","pr","width","height","pl","align","map","element","border","backgroundColor","chartHeight","chartData","sheetId","gid","query","headers","chartType","columns","options","legend","position","enableInteractivity","hAxis","ticks","chartArea","portrait","landscape","isStacked","colors","bar","groupWidth","Box","filter","mode","display","justifyContent","marginTop","spacing","maxHeight","marginLeft","marginRight","capitalizePhrase","jsonData","maxWidth","margin","elevation","p","variant","parse","replace","replacePlainHTMLWithMuiComponents","mt","textAlign","href","onClick","Tracking","target","rel","marginBottom","customBackground","pointerEvents","customAlternateBackground","borderRightWidth","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","MuiAccordionSummary","flexDirection","paddingLeft","textDecoration","main","AirQualityIndexLegendQuickGlance","useState","anchorEl","setAnchorEl","handlePopperOpen","event","currentTarget","handlePopperClose","open","Boolean","FadeInButtonForSpeedDial","distanceFromBottomOfWindow","Fab","undefined","onMouseEnter","onMouseLeave","isMobile","Stack","direction","alignItems","Air","Popper","id","placement","onClose","keepMounted","disableRestoreFocus","TransitionProps","Fade","timeout","Paper","py","mb","mx","AirQualityIndexTable","DatasetDownloadDialog","project","rawDatasetsMetadata","useContext","RawDatasetsMetadataContext","datasets","setDatasets","useEffect","console","log","smallScreen","useMediaQuery","setOpen","handleClose","Button","project_id","DataObject","Dialog","fullWidth","fullScreen","DialogActions","autoFocus","ChevronLeft","DialogContent","px","Chip","label","title","DatasetSelectorAndPreviewer","fontStyle","owners","length","join","lastOwner","pop","oxfordCommaOwners","getOwnerString","Link","previewingDataset","setPreviewingDataset","previewingDatasetId","setPreviewingDatasetId","versions","fetchDataFromURL","rawLink","then","data","fetchedDataset","Grid","container","item","sm","md","DatasetsTable","PreviewDataset","tableLayout","TableHead","TableRow","TableCell","TableBody","dataset","Dataset","isPreviewing","fetchedDatasets","setFetchedDatasets","latestVersionOfThisDataset","selectedVersionOfThisDataset","setSelectedVersionOfThisDataset","fetchThisDataset","selectedVersion","version","selectedVersionWithFetchedDataset","setThisDatasetToPreview","cursor","NYUpurpleLight","FormControl","Select","value","onChange","find","aDatasetVersion","MenuProps","disablePortal","MenuItem","sizeInBytes","toFixed","formatFileSize","downloadDatasetName","formattedData","setFormattedData","rowIndices","setRowIndices","csvData","lines","split","numRows","numFirstLastRowsToPreview","Array","from","_","index","firstRows","slice","lastRows","numOfHiddenRows","middleRow","concat","rowIndex","fontFamily","icon","Visibility","borderRadius","borderTopLeftRadius","borderTopRightRadius","pb","component","overflowX","minHeight","mr","userSelect","textTransform","blob","Blob","type","url","URL","createObjectURL","downloadLink","document","createElement","download","body","appendChild","click","revokeObjectURL","removeChild","downloadPreviewingDataset","dataset_id","dataset_name","dataset_version","disabled","Download","CustomChip","tooltipTitle","otherProps","themePreference","LinkContext","setCurrentPage","chartsTitlesList","setChartsTitlesList","useParams","setProject","loading","setLoading","TabContext","tab","setTab","CommentCountsContext","commentCounts","commentCount","SheetsDataContext","lastUpdate","chartsTitles","temp","i","charts","chartTitle","chartID","FullWidthBox","Container","pt","UppercaseTitle","owner","Person","Email","contact","clickable","BarChart","scrollToSection","destination_id","destination_label","origin_id","PublishedWithChanges","Comment","gutterBottom","className","ThemePreferences","chartSubstituteComponentName","ChartSubstituteComponentLoader","ChartComponent","chartIndex","my","subtitle","Object","keys","subcharts","values","subchartSubtitle","reference","Divider","CommentSection","pageID","GetInTouch"],"sourceRoot":""}