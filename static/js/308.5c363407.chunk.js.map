{"version":3,"file":"static/js/308.5c363407.chunk.js","mappings":"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","sources":["Pages/Home/GetInTouch.jsx","Pages/Project/ExpandableSection.jsx","Pages/Project/DatasetDownloadButton.jsx","Pages/Project/Project.jsx"],"sourcesContent":["// disable eslint for this file\n/* eslint-disable */\nimport { Grid, Typography, Container, Paper, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nconst IFrameWrapper = styled(Box)(({ theme }) => ({\n    filter: theme.palette.mode == \"dark\" && \"invert(0.848) hue-rotate(180deg)\",\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(2),\n    height: '70vh',\n    [theme.breakpoints.down(\"md\")]: {\n        marginLeft: theme.spacing(-2),\n        marginRight: theme.spacing(-2),\n    },\n}));\n\nconst GetInTouch = ({ themePreference }) => {\n    const googleFormLink = 'https://docs.google.com/forms/d/e/1FAIpQLSenxtTIizWED0PT3hBOn3IU6fwmj4sr1yhjU70mjmK4R-ipsw/';\n    return (\n        <Container>\n            <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n\n            <Box maxWidth={\"md\"} margin={\"auto\"}>\n                <Paper elevation={2} sx={{ p: 3 }}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        {parse(jsonData.getInTouch.content, {\n                            replace: replacePlainHTMLWithMuiComponents,\n                        })}\n                    </Typography>\n                    <IFrameWrapper>\n                        <iframe src={`${googleFormLink}viewform?embedded=true`} width=\"100%\" height=\"100%\" frameBorder=\"0\">Loading...</iframe>\n                    </IFrameWrapper>\n                </Paper>\n            </Box>\n        </Container >\n    );\n};\n\nexport default GetInTouch;","// disable eslint for this file\n/* eslint-disable */\n\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport * as Tracking from '../../Utils/Tracking';\n\n// import ReactGA from 'react-ga4';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n    color: theme.palette.text.secondary,\n    backgroundImage: 'none',\n    backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n    boxShadow: expanded ? theme.shadows : 'none',\n    transition: theme.transitions,\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n    marginTop: expanded ? theme.spacing(3) : 0,\n    flexDirection: 'row-reverse',\n    paddingLeft: expanded ? theme.spacing(1) : 0,\n    '& .MuiTypography-root': {\n        color: theme.palette.text.primary,\n        textDecoration: 'underline',\n        transition: theme.transitions,\n        '&:hover': {\n            color: theme.palette.primary.main,\n        },\n    },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n    const [expanded, setExpanded] = useState(undefined);\n\n    const handleAccordionChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : undefined);\n\n        Tracking.sendEventAnalytics(isExpanded ? Tracking.Events.expandSampleData : Tracking.Events.collapseSampleData);\n    };\n\n    return (\n        <Box>\n            <StyledAccordion\n                expanded={expanded === \"panel1\"}\n                onChange={handleAccordionChange(\"panel1\")}\n            >\n                <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n                    <Tooltip title={expanded ? \"Click to collapse\" : \"Click to expand\"}>\n                        <Typography component=\"a\" variant=\"body1\">\n                            {title}\n                        </Typography>\n                    </Tooltip>\n                </StyledAccordionSummary>\n                <MuiAccordionDetails>\n                    {content}\n                </MuiAccordionDetails>\n            </StyledAccordion>\n        </Box>\n    );\n}\n\nexport default ExpandableSection;\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { Box, Button } from '@mui/material';\nimport LinkIcon from '@mui/icons-material/Link';\nimport * as Tracking from '../../Utils/Tracking';\n\n// Download button: download raw dataset\n\nexport function DatasetDownloadButton({ project }) {\n    const isDisabled = project.sheetId == null ? true : false;\n    return (\n        <Button\n            onClick={() => {\n                Tracking.sendEventAnalytics(Tracking.Events.getDataset);\n            }}\n            href={isDisabled\n                ? ''\n                : `https://docs.google.com/spreadsheets/d/${project.sheetId}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            disabled={isDisabled} variant=\"contained\">\n            <LinkIcon />\n            &nbsp;\n            {isDisabled ? 'COMING SOON' : 'FULL DATASET'}\n        </Button>\n    );\n}\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport CommentSection from '../../Components/CommentSection';\nimport { Box, Typography, Container, Divider, Chip, Grid, Tooltip } from '@mui/material';\n\nimport GetInTouch from '../Home/GetInTouch';\n\nimport ExpandableSection from './ExpandableSection';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport data from '../../temp_database.json';\nimport jsonData from '../../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\n\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport { DatasetDownloadButton } from './DatasetDownloadButton';\n\nimport { scrollToSection } from '../../Components/Header/MenuItemAsNavLink';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport { CommentCountsContext } from '../../ContextProviders/CommentCountsContext';\n\n// Custom Chip component to display metadata\nconst CustomChip = (props) => {\n  const { tooltipTitle, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle}>\n      <Chip\n        size=\"small\"\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = ({ themePreference }) => {\n  const [_, setCurrentPage, chartsTitlesList, setChartsTitlesList] = useContext(LinkContext);\n\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  const [commentCounts] = useContext(CommentCountsContext);\n\n  // Update the page's title\n  useEffect(() => { if (project.title) document.title = `${project.title} | CITIES Dashboard`, [project] });\n\n  // Update the currentPage with the project's ID\n  // and the chartsTitle with all the charts' titles of the project\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    let chartsTitles = [];\n\n    data.map((project) => {\n      if (project.id === id) {\n        setProject({ ...project });\n        let temp = {};\n        for (let i = 0; i < project.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n        // Populate the array with all the charts' titles of the project\n        chartsTitles = project.charts.map((element, index) => ({ chartTitle: element.title, chartID: `chart-${index + 1}` }));\n      }\n    });\n\n    setCurrentPage(\"project\");\n    setChartsTitlesList(chartsTitles);\n\n  }, [id, setCurrentPage, setChartsTitlesList]);\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          <Box>\n            <Container sx={{ pt: 4, pb: 4 }}>\n\n              <UppercaseTitle text={project.title} />\n\n              <Grid container spacing={1} sx={{ pb: 3, mt: -3 }}>\n                <Grid item>\n                  <CustomChip\n                    icon={<PersonIcon />}\n                    label={project.owner}\n                    tooltipTitle=\"Dataset Owner\" />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<EmailIcon />}\n                    label={project.contact}\n                    tooltipTitle=\"Contact\"\n                    component=\"a\"\n                    href={`mailto:${project.contact}`}\n                    clickable\n                  />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<PublishedWithChangesIcon />}\n                    label={`${project.lastUpdate}`}\n                    tooltipTitle=\"Last Update\" />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<BarChartIcon />}\n                    label={`${project.charts.length} Chart${project.charts.length > 1 && \"s\"}`}\n                    tooltipTitle=\"Number of Charts\"\n                    onClick={() => {\n                      scrollToSection(jsonData.charts.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.charts.id,\n                          destination_label: jsonData.project.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n                <Grid item>\n                  <CustomChip\n                    icon={<CommentIcon />}\n                    label={`${commentCounts[project.id]?.commentCounts || \"...\"} Comment${commentCounts[project.id]?.commentCounts > 1 ? \"s\" : \"\"}`}\n                    tooltipTitle=\"Number of Comments\"\n                    onClick={() => {\n                      scrollToSection(jsonData.commentSection.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.commentSection.id,\n                          destination_label: jsonData.commentSection.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              <Typography\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{ textAlign: 'justify', pb: 3, mb: 0 }}\n                gutterBottom\n              >\n                {parse(project.description, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n\n              <DatasetDownloadButton project={project} />\n\n              <ExpandableSection\n                title=\"Sample Data\"\n                content={\n                  <>\n                    {project.rawDataTables.map((element, index) => (\n                      <Box\n                        key={index}\n                        sx={\n                          index < project.rawDataTables.length - 1\n                            ? { mb: 3 }\n                            : { mb: 1 }\n                        }\n                      >\n                        <ChartComponent\n                          chartData={{\n                            chartType: 'Table',\n                            sortAscending: true,\n                            frozenColumns: 1,\n                            sheetId: project.sheetId,\n                            ...element,\n                          }}\n                          themePreference={themePreference}\n                          isHomepage={false}\n                        />\n                      </Box>\n                    ))}\n                  </>\n                }\n              />\n            </Container>\n          </Box>\n\n          <Box id={jsonData.charts.id}>\n            {project.charts.map((element, index) => (\n              <Box\n                id={chartsTitlesList[index].chartID} // set the chartWrapper's ID to help Navbar in Header scroll to\n                key={index}\n                backgroundColor={\n                  index % 2 == 0 ? 'customAlternateBackground' : ''\n                }\n              >\n                <Container\n                  sx={{ pt: 4, pb: 4 }}\n                  height=\"auto\"\n                  className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                >\n                  <Typography variant=\"h6\" color=\"text.primary\">\n                    {index + 1}. {element.title}\n                  </Typography>\n                  <ChartComponent\n                    chartData={{\n                      chartIndex: index,\n                      sheetId: project.sheetId,\n                      ...element,\n                    }}\n                  />\n                  <Box sx={{ m: 3 }}>\n                    <Typography\n                      variant=\"body1\"\n                      color=\"text.secondary\"\n                      sx={{ mb: 2 }}\n                    >\n                      {element.subtitle && parse(element.subtitle, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]]\n                          .subchartSubtitle &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]]\n                            .subchartSubtitle, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {element.reference && parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]].reference &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]].reference, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                  </Box>\n                </Container>\n              </Box>\n            ))}\n          </Box>\n\n\n          <Divider />\n\n          <Box id={jsonData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n            <CommentSection pageID={project.id} />\n          </Box>\n\n          <Divider />\n\n          <Box id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n            <GetInTouch themePreference={themePreference} />\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["IFrameWrapper","styled","Box","theme","filter","palette","mode","display","justifyContent","marginTop","spacing","height","breakpoints","down","marginLeft","marginRight","themePreference","text","capitalizePhrase","jsonData","maxWidth","margin","elevation","sx","p","variant","color","parse","replace","replacePlainHTMLWithMuiComponents","src","width","frameBorder","StyledAccordion","MuiAccordion","expanded","secondary","backgroundImage","backgroundColor","background","default","boxShadow","shadows","transition","transitions","StyledAccordionSummary","MuiAccordionSummary","flexDirection","paddingLeft","primary","textDecoration","main","panel","title","content","useState","undefined","setExpanded","onChange","event","isExpanded","Tracking","expandIcon","ExpandMore","id","Tooltip","Typography","component","DatasetDownloadButton","project","isDisabled","sheetId","Button","onClick","href","target","rel","disabled","Link","CustomChip","props","tooltipTitle","otherProps","Chip","size","useContext","LinkContext","setCurrentPage","chartsTitlesList","setChartsTitlesList","useParams","setProject","loading","setLoading","TabContext","tab","setTab","CommentCountsContext","commentCounts","useEffect","document","chartsTitles","data","temp","i","charts","length","map","element","index","chartTitle","chartID","Container","pt","pb","UppercaseTitle","Grid","container","mt","item","icon","Person","label","owner","Email","contact","clickable","PublishedWithChanges","lastUpdate","BarChart","scrollToSection","destination_id","destination_label","origin_id","Comment","textAlign","mb","gutterBottom","description","rawDataTables","ChartComponent","chartData","chartType","sortAscending","frozenColumns","isHomepage","className","ThemePreferences","chartIndex","m","subtitle","Object","keys","subcharts","values","subchartSubtitle","reference","Divider","CommentSection","pageID","GetInTouch"],"sourceRoot":""}